int[][] matrix1 = {
  {1, 0, 4},
  {-1, 2, -5}
};

int[][] matrix2 = {
  {2, -3, 1},
  {5, 8, 2}
};

int[][] matrix3 = {
  {0, 1},
  {2, -1},
  {3, 4},
};

void setup () {
  matrixAdd (matrix1, matrix2);
  println();
  println();
  matrixTranspose (matrix1);
  println();
  println();
  matrixMultiply(matrix1, matrix3);
}

//Function to add 2 matrix
void matrixAdd (int[][] matrix1, int[][] matrix2) {
  println("addition of two matrices : ");
  int[][]matrix3 = new int [matrix1.length][matrix1[0].length];
  for (int i=0; i<matrix1.length; i++) {
    for (int j=0; j<matrix1[i].length; j++) {
      matrix3 [i][j] = matrix1[i][j]+matrix2[i][j];
      print("matrix3["+i+"]["+j+"] : "+matrix3[i][j]+"\t");
    }
    println();
  }
}

//Function to transpose a matrix
void matrixTranspose (int [][] matrix) {
  println("Transpose of a matrix : ");
  int[][]matrixT = new int[matrix[0].length][matrix.length];
  for (int i=0; i<matrixT.length; i++) {
    for (int j=0; j<matrixT[i].length; j++) {
      matrixT [i][j] = matrix[j][i];
      print("matrixT["+i+"]["+j+"] : "+matrixT[i][j]+"\t");
    }
    println();
  }
}

//Function to multiply 2 matrices
void matrixMultiply(int[][] matrix1, int[][] matrix2) {
  if (matrix1.length == matrix2[0].length && matrix1[0].length == matrix2.length) {
    println("Multiplication of 2 matrices : ");
    int[][]matrixMultiply = new int [matrix1.length][matrix2[0].length];
    for (int i=0; i<matrix1.length; i++) {
      for (int j=0; j<matrix2[0].length; j++) {
        int indextest = 0;
        for (int k=0; k<matrix2.length-1; k++) {
          //Code for the multiplication
          indextest = indextest + matrix1[i][k]*matrix2[k][j];
          matrixMultiply[i][j] = indextest + matrix1[i][k+1]*matrix2[k+1][j];
          println("matrixMultiply["+i+"]["+j+"] = matrix1["+i+"]["+k+"] * matrix2["+k+"]["+j+"] + matrix1["+i+"]["+(k+1)+"] * matrix2["+(k+1)+"]["+j+"]");
        }
      println("matrixMultiply["+i+"]["+j+"] : "+matrixMultiply[i][j]+"\t");
      }
      println();
    }
  }
  else {
    println("Operation not possible : matrices length is not compatible with multiplication");
  }
}
